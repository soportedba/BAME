apiVersion: apps/v1
kind: Deployment
metadata:
  name: facturascripts
  labels:
    app: facturascripts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: facturascripts
  template:
    metadata:
      labels:
        app: facturascripts
    spec:
      containers:
      - name: facturascripts
        image: facturascripts/facturascripts:2021.71
        ports:
           - containerPort: 80
        command: ["/bin/bash", "-c"]
        args:
          - /scripts/config.sh;
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: volume-from-config-map-script
          mountPath: "/scripts"
          readOnly: true    
        - name: shared-data
          mountPath: "/var/www/html"
      initContainers:
      - name: facturascripts-config
        image: facturascripts/facturascripts:2021.71
        command: ["/bin/bash", "-c"]
        args:
          - /scripts/config.sh;
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: volume-from-config-map-script
          mountPath: "/scripts"
          readOnly: true        
        - name: shared-data
          mountPath: "/var/www/html"
      volumes:
      - name: volume-from-config-map-script
        projected:
          sources:
          - configMap:
              name: cm-facturascripts
              items:
              - key: config.sh
                path: config.sh
                mode: 0755
      - name: shared-data
        persistentVolumeClaim:
          claimName: facturascripts-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: facturascripts
  labels:
    app: facturascripts
spec:
  type: NodePort
  ports:
   - port: 80
  selector:
   app: facturascripts
  externalIPs: ["192.168.0.34"]        