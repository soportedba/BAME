CREATE OR REPLACE FUNCTION MTDT_LOAD (VCUBE IN integer DEFAULT 0, VPOST IN VARCHAR DEFAULT 'Y', VINICIAL IN VARCHAR DEFAULT 'N', VDEGREE IN INTEGER DEFAULT 1) RETURNS VOID AS $$
DECLARE
	V_ID_LOG integer;
	VLOAD 		 INTEGER;
	VID_DAY_INI	INTEGER;
	VID_DAY_FIN	INTEGER;
	VFEC_INI	VARCHAR(100);
	VFEC_FIN	VARCHAR(100);
	V_TYPE	VARCHAR(100);
BEGIN
	SELECT TYPE INTO V_TYPE FROM MTDT_CUBE WHERE ID_CUBE=VCUBE;
	
	IF V_TYPE='COMPLETE' THEN
		perform * from MTDT_LOAD_FULL(VCUBE, VPOST);
	ELSIF V_TYPE='INCREMENTAL' THEN
		begin
			VLOAD:=0;
			SELECT COUNT(1) INTO VLOAD FROM MTDT_LOAD_CONTROL WHERE UPPER(COALESCE(COMPLETED,'N'))='N' and id_cube=VCUBE;
			IF VLOAD=0 OR VLOAD IS NULL THEN
				V_ID_LOG:=MTDT_LOG_REGISTRATION('I',0,'MTDT_LOAD_CONTROL','MTDT_LOAD','There is no pending load');
				return;
			END IF;
			-- WITH STRICT, THIS WOULD FAIL IF THERE IS MORE THAN 1 PENDING LOAD, WHAT IS CORRECT
			SELECT ID, TRUNC(EXTRACT(EPOCH FROM FEC_INI)/24/60/60),TRUNC(EXTRACT(EPOCH FROM FEC_FIN)/24/60/60), 
				'TO_TIMESTAMP('||CHR(39)||TO_CHAR(FEC_INI,'DD/MM/YYYY HH24:MI:SS.US')||CHR(39)||','||CHR(39)||'DD/MM/YYYY HH24:MI:SS.US'||CHR(39)||')' , 
				'TO_TIMESTAMP('||CHR(39)||TO_CHAR(FEC_FIN,'DD/MM/YYYY HH24:MI:SS.US')||CHR(39)||','||CHR(39)||'DD/MM/YYYY HH24:MI:SS.US'||CHR(39)||')' 
				INTO STRICT VLOAD,VID_DAY_INI,VID_DAY_FIN,VFEC_INI,VFEC_FIN FROM MTDT_LOAD_CONTROL WHERE UPPER(COALESCE(COMPLETED,'N'))='N'  and id_cube=VCUBE;
		exception when others then
			V_ID_LOG:=MTDT_LOG_REGISTRATION('I',0,'MTDT_LOAD_CONTROL','MTDT_LOAD','Non unique row');
			return;
		end;
		perform * from MTDT_LOAD_DDL(VCUBE, VPOST);
		perform * from MTDT_LOAD_INC(VCUBE, VPOST, VINICIAL, VFEC_INI, VFEC_FIN, VDEGREE);
		UPDATE MTDT_LOAD_CONTROL SET COMPLETED='Y' WHERE ID=VLOAD;
	END IF;
END;
$$ language plpgsql;

